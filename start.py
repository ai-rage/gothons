# -*- coding: utf-8 -*-

from sys import exit
from random import randint

class Scene(object):

    def enter(self):
        print "Эта сцена еще не настроена."
        print "Создайте подкласс и реализуйте функцию enter()."
        exit(1)


class Engine(object):

    def __init__(self, scene_map):
        self.scene_map = scene_map
    
    def play(self):
        current_scene = self.scene_map.opening_scene()
        
        while True:
            next_scene_name = current_scene.enter()
            current_scene = self.scene_map.next_scene(next_scene_name)

        current_scene.enter()


class Death(Scene):
    
    quips = [
        "Вы погибли. Как это ни печально",
        "Ваша мать будет грустить по вам... надо было быть умнее.",
        "Надо же было быть таким придурком.",
        "Даже мой маленький щенок соображает лучше,"
        ]
    
    def enter(self):
        print Death.quips[randint(0, len(self.quips) - 1)]
        exit(1)


class CentralCorridor(Scene):

    def enter(self):
        print "Готоны с планеты Перкаль захватили ваш корабль и уничтожили "
        print "всю команду. Вы - единственный, кто остался в живых. "
        print "Вам нужно выкрасть нейтронную бомбу в оружейной лаборатории, "
        print "заложить ее в топливном отсеке и покинуть корабль в спасательной "
        print "капсуле прежде, чем он взорвется."
        print "\n"
        print "Вы бежите по центральному коридору в оружейную лабораторию, когда перед вами "
        print "появляется Готон с красной чешуйчатой кожей, гнилыми зубами и в костюме  клоуна. "
        print "Она с ненавистью смотрит на вас и, преградив дорогу в лабораторию, "
        print "вытаскивает бластер, чтобы уничтожить вас."
        
        action = raw_input("> ")
        
        if action == "стрелять!":
            print "Вы быстро выхватываете свой бластер и начинаете палить по Готону."
            print "Его клоунский наряд крутится и мешает лучам попадать в "
            print "его тело. Все ваши выстрелы лазером потерпели неудачу, и заряд бластера иссяк. "
            print "Костюм Готона, который купила его мать, безнадежно испорчен, поэтому"
            print "она в ярости выхватывает бластер и стреляет вам в голову. "
            print "Вы убиты."
            return 'death'

        elif action == "проскочить!":
            print "Словно боксер мирового класса, вы уворачиваетесь и проскальзываете справа "
            print "от Готона, краем глаза видя, что его бластер направлен вам в голову. "
            print "И тут вы подскальзываетесь и врезаетесь в металлическую стену. От удара "
            print "вы теряете сознание. "
            print "Придя в сознание, вы успеваете почувствовать, что Готон топчется на вашей "
            print "голове и поживает вас."
            return 'death'
            
        elif action == "пошутить!":
            print "К счастью, вы знакомы с культурой Готонов и знаете, что их способно рассмешить. "
            print "Вы рассказываете бородатый анекдот: "
            print "Неоколонии, изоморфно релятивные к мультиполосным гиперболическим параболоидам."
            print "Готон замирает, старается сдержать смех, а затем начинает безудержно хохотать."
            print "Пока он смеется, вы достаете бластер и стреляете Готону в голову. "
            print "Он падает, а вы перепрыгиваете его и бежите в оружейную лабораторию."
            return 'laser_weapon_armory'
            
        else:
            print "ТАК НЕЛЬЗЯ ПОСТУПИТЬ!"
            return 'central_corridor'


class LaserWeaponArmory(Scene):

    def enter(self):
        print "Вы вбегаете в оружейную лабораторию и начинаете обыскивать комнату, "
        print "спрятались ли тут другие Готоны. Стоит мертвая тишина. "
        print "Вы бежите в дальний угол комнаты и находите нейтронную бомбу "
        print "в защитном контейнере. На лицевой стороне контейнера расположена "
        print "панель с кнопками, и вам надо ввести правильный код, чтобы достать бомбу. "
        print "Если вы 10 раз введете неправильный код, контейнер заблокируется, и вы "
        print "не сможете достать бомбу. Код состоит из трех цифр."
        code = "%d%d%d" % (randint(1,9), randint(1,9), randint(1,9))
        print code
        quess = raw_input("[keypad]> ")
        quesses = 0
    
        while quess != code and quesses < 10:
            print "ВЖЖЖИИИК!"
            quesses += 1
            quesses = raw_input("[keypad]> ")
            
        if quess == code:
            print "Контейнер открывается со щелчком и выпускает сизый газ. "
            print "Вы вытаскиваете нейтронную бомбу и бежите в топливный отсек, "
            print "чтобы установить бомбу в нужном месте."
            return 'the_fuelcell'
        else:
            print "Вы слышите, как замок жужжит последний раз, а затем чувствуете "
            print "горелый запах - замок расплавился. "
            print "Вы остаетесь в оружейной лавке, пока наконец Готоны не взорвут "
            print "ваш корабль со своего и вы не умрете."
            return 'death'


class TheFuelcell(Scene):

    def enter(self):
        print "Вы вбегаете в топливный отсек с нейтронной бомбой и видите "
        print "пятерых Готонов, безуспешно пытающихся управлять "
        print "кораблем. Один уродливее другого, и все в клоунских "
        print "костюмах, как и Готон, убитый вами. Они не достают оружие, "
        print "так как видят бомбу у вас в руках и не хотят, чтобы "
        print "вы установили ее."
        
        action = raw_input("> ")

        if action == "бросить бомбу":
            print "Вы в панике активируете и бросаете бомбу в толпу Готонов, "
            print "а затем прыгаете к двери шлюза. Сразу после этого "
            print "один из Готонов стреляет вам в спину. Умирая, "
            print "вы видите, как другие Готоны тщетно пытаются деактивировать "
            print "бомбу. Умирая, вы осазнаете, что Готоны тоже погибнут."
            print "Ваше сознание угасает."
            return 'death'
            
        elif action == "установить бомбу":
            print "Вы указываете бластером на бомбу в ваших руках."
            print "Готоны поднимают лапы вверх и в страхе потеют."
            print "Вы осторожно, не отворачиваясь, подходите к двери и "
            print "аккуратно устанавливаете бомбу, держа Готонов под прицелом. "
            print "Вы запрыгиваете в шлюз и закрываете его ударом по кнопке, "
            print "а затем бластером расплавляете замок, чтобы Готоны не смогли "
            print "открыть дверь. Теперь вам нужно залезть в спасательную капсулу "
            print "и удрать с корабля к чертям собачьим."
            return 'escape_pod'
        else:
            print "ТАК НЕЛЬЗЯ ПОСТУПИТЬ!"
            return "the_fuelcell"


class EscapePod(Scene):

    def enter(self):
        print "Вы мчитесь по отсеку со спасательными капсулами. Некоторые из них "
        print "могут быть повреждены и взорвутся во время полета. Всего капсул "
        print "пять, и у вас нет времени, чтобы осматривать каждую из них"
        print "на отсутствие повреждений."
        print "Задумавшись на секунду, вы решаете сесть в капсулу под "
        print "номером... "
        print "Какой номер вы выбираете?"
        
        good_pod = randint(1,5)
        print good_pod
        quess = raw_input("[pod #]> ")
        
        if int(quess) != good_pod:
            print "Вы запрыгиваете в капсулу номер %s и нажимаете кнопку отстыковки." % quess
            print "Капсула вылетает в космическое пространство, а затем "
            print "взрывается с яркой вспышкой и разбрасывая осколки."
            print "Вы умираете."
            return 'death'
        else:
            print "Вы запрыгиваете в капсулу номер %s и нажимаете кнопку отстыковки." % quess
            print "Капсула вылетает в космическое пространство, а затем"
            print "отправляется к планете неподалеку. Вы смотрите в иллюминатор и видите, как ваш "
            print "корабль взрывается. Его осколки повреждают топливный отсек корабля "
            print "Готонов, и тот тоже разлетается в клочья. "
            print "Победа за вами!"
            
            return 'finished'

class Finished(Scene):

    def enter(self):
        print "Вы победили! Отличная работа!"
        exit(1)


class Map(object):
    
    scenes = {
        'central_corridor': CentralCorridor(),
        'laser_weapon_armory': LaserWeaponArmory(),
        'the_fuelcell': TheFuelcell(),
        'escape_pod': EscapePod(),
        'death': Death(),
        'finished': Finished()
        }
        
    def __init__(self, start_scene):
        self.start_scene = start_scene

    def next_scene(self, scene_name):
        val = Map.scenes.get(scene_name)
        return val

    def opening_scene(self):
        return self.next_scene(self.start_scene)


a_map = Map('central_corridor')
a_game = Engine(a_map)
a_game.play()
